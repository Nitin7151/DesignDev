{"response":"```xml\n<boltArtifact id=\"node-express-rest-api\" title=\"Node.js REST API with Express and MVC\">\n  <boltAction type=\"file\" filePath=\"package.json\">\n    {\n      \"name\": \"todo-api\",\n      \"version\": \"1.0.0\",\n      \"description\": \"REST API for managing todos\",\n      \"main\": \"index.js\",\n      \"scripts\": {\n        \"start\": \"node index.js\",\n        \"dev\": \"nodemon index.js\"\n      },\n      \"dependencies\": {\n        \"express\": \"^4.18.2\"\n      },\n      \"devDependencies\": {\n        \"nodemon\": \"^2.0.22\"\n      }\n    }\n  </boltAction>\n\n  <boltAction type=\"file\" filePath=\"index.js\">\n    const express = require('express');\n    const app = express();\n    const port = 3000;\n    const todoRoutes = require('./routes/todos');\n\n    app.use(express.json());\n    app.use('/todos', todoRoutes);\n\n    app.listen(port, () => {\n      console.log(`Server is running on port ${port}`);\n    });\n  </boltAction>\n\n  <boltAction type=\"file\" filePath=\"routes/todos.js\">\n    const express = require('express');\n    const router = express.Router();\n    const todosController = require('../controllers/todos');\n\n    router.get('/', todosController.getAllTodos);\n    router.post('/', todosController.createTodo);\n    router.get('/:id', todosController.getTodoById);\n    router.put('/:id', todosController.updateTodo);\n    router.delete('/:id', todosController.deleteTodo);\n\n    module.exports = router;\n\n  </boltAction>\n\n  <boltAction type=\"file\" filePath=\"controllers/todos.js\">\n    const todos = []; // In-memory storage - replace with database\n\n    exports.getAllTodos = (req, res) => {\n      res.json(todos);\n    };\n\n    exports.createTodo = (req, res) => {\n      const newTodo = {\n        id: todos.length + 1,\n        title: req.body.title,\n        completed: false\n      };\n      todos.push(newTodo);\n      res.status(201).json(newTodo);\n    };\n\n\n    exports.getTodoById = (req, res) => {\n      const todo = todos.find(t => t.id === parseInt(req.params.id));\n      if (!todo) {\n        return res.status(404).json({ message: 'Todo not found' });\n      }\n      res.json(todo);\n    };\n\n\n    exports.updateTodo = (req, res) => {\n      const todoIndex = todos.findIndex(t => t.id === parseInt(req.params.id));\n      if (todoIndex === -1) {\n        return res.status(404).json({ message: 'Todo not found' });\n      }\n      todos[todoIndex] = { ...todos[todoIndex], ...req.body };\n      res.json(todos[todoIndex]);\n    };\n\n    exports.deleteTodo = (req, res) => {\n      const todoIndex = todos.findIndex(t => t.id === parseInt(req.params.id));\n      if (todoIndex === -1) {\n        return res.status(404).json({ message: 'Todo not found' });\n      }\n      todos.splice(todoIndex, 1);\n      res.sendStatus(204);\n    };\n  </boltAction>\n\n  <boltAction type=\"shell\">\n    npm install\n  </boltAction>\n\n  <boltAction type=\"shell\">\n    npm run dev\n  </boltAction>\n\n</boltArtifact>\n```\n"}